name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test-lint:
    name: Build, Test, and Lint
    runs-on: ubuntu-latest

    steps:
      # -----------------------------------
      # 1. Checkout repository
      # -----------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -----------------------------------
      # 2. Set up Miniforge environment (mamba-enabled)
      # -----------------------------------
      - name: Set up Miniforge
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: environment.yml
          activate-environment: fakect
          python-version: 3.10
          auto-activate-base: false
          miniforge-variant: Miniforge3   # âœ… replaces deprecated Mambaforge
          use-mamba: true

      # -----------------------------------
      # 3. Cache conda packages (optional but speeds up builds)
      # -----------------------------------
      - name: Cache conda pkgs
        uses: actions/cache@v3
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ hashFiles('environment.yml') }}

      # -----------------------------------
      # 4. Install package in editable mode
      # -----------------------------------
      - name: Install package
        run: pip install -e .

      # -----------------------------------
      # 5. Run tests
      # -----------------------------------
      - name: Run tests
        run: |
          pytest -v --maxfail=1 --disable-warnings --cov=src/fakect --cov-report=term-missing

      # -----------------------------------
      # 6. Lint and format check
      # -----------------------------------
      - name: Lint and format
        run: |
          black --check src tests
          flake8 src tests
          isort --check src tests

      # -----------------------------------
      # 7. Verify build
      # -----------------------------------
      - name: Verify package build
        run: |
          python -m build --wheel --no-isolation
